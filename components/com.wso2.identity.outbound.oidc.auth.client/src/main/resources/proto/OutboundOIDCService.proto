/**
 * Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com).
 *
 * This software is the property of WSO2 LLC. and its suppliers, if any.
 * Dissemination of any information or reproduction of any material contained
 * herein in any form is strictly forbidden, unless permitted by WSO2 expressly.
 * You may not alter or remove any copyright or other notice from copies of this content."
 */

syntax = "proto3";
option java_multiple_files = true;
package com.wso2.identity.outbound.oidc.auth.service.rpc;

message Request {

  message RequestParam {

    string paramName = 1;
    repeated string paramValue = 2;
  }
  string requestURL = 1;
  string queryString = 2;
  map<string, string> headers = 5;
  repeated RequestParam requestParams = 4;
}

message CanHandleResponse {

  bool canHandle = 1;
}

message AuthenticationContext {

  string contextIdentifier = 1;
  map<string, string> authenticatorProperties = 2;
  map<string, string> authenticatorParams = 3;
  map<string, string> contextProperties = 4;
}

message InitAuthRequest {

  AuthenticationContext authenticationContext = 1;
  Request request = 2;
}

message InitAuthResponse {

  bool isRedirect = 1;
  string redirectUrl = 2;
}

message ProcessAuthRequest {

  AuthenticationContext authenticationContext = 1;
  Request request = 2;
}

message ProcessAuthResponse {

  string authenticationStatus = 1;
  AuthenticatedUser authenticatedUser = 2;
  map<string, string> authenticationData = 3;
}

message AuthenticatedUser {

  bool isFederatedUser = 1;
  map<string, string> userAttributes = 2;
}

service OutboundOIDCService {

  rpc canHandle(Request) returns (CanHandleResponse);

  rpc initiateAuthentication(InitAuthRequest) returns (InitAuthResponse);

  rpc processAuthenticationResponse(ProcessAuthRequest) returns (ProcessAuthResponse);
}
