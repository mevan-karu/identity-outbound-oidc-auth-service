/*
 * Copyright (c) 2022, WSO2 LLC. (http://www.wso2.com).
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

syntax = "proto3";
option java_multiple_files = true;
package org.wso2.identity.outbound.oidc.auth.service.rpc;

message Request {

  message RequestParam {

    string paramName = 1;
    repeated string paramValue = 2;
  }
  string requestURL = 1;
  string queryString = 2;
  map<string, string> headers = 5;
  repeated RequestParam requestParams = 4;
}

message CanHandleResponse {

  bool canHandle = 1;
}

message AuthenticationContext {

  string contextIdentifier = 1;
  map<string, string> authenticatorProperties = 2;
  map<string, string> authenticatorParams = 3;
  map<string, string> contextProperties = 4;
}

message InitAuthRequest {

  AuthenticationContext authenticationContext = 1;
  Request request = 2;
}

message InitAuthResponse {

  bool isRedirect = 1;
  string redirectUrl = 2;
}

message ProcessAuthRequest {

  AuthenticationContext authenticationContext = 1;
  Request request = 2;
}

message ProcessAuthResponse {

  string authenticationStatus = 1;
  AuthenticatedUser authenticatedUser = 2;
  map<string, string> authenticationData = 3;
}

message AuthenticatedUser {

  bool isFederatedUser = 1;
  map<string, string> userAttributes = 2;
}

service OutboundOIDCService {

  rpc canHandle(Request) returns (CanHandleResponse);

  rpc initiateAuthentication(InitAuthRequest) returns (InitAuthResponse);

  rpc processAuthenticationResponse(ProcessAuthRequest) returns (ProcessAuthResponse);
}
