// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OutboundOIDCService.proto

package com.wso2.identity.outbound.oidc.auth.service.rpc;

/**
 * Protobuf type {@code ProcessAuthResponse}
 */
public  final class ProcessAuthResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ProcessAuthResponse)
    ProcessAuthResponseOrBuilder {
  // Use ProcessAuthResponse.newBuilder() to construct.
  private ProcessAuthResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ProcessAuthResponse() {
    authenticationStatus_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ProcessAuthResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            authenticationStatus_ = rawValue;
            break;
          }
          case 18: {
            com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.Builder subBuilder = null;
            if (authenticatedUser_ != null) {
              subBuilder = authenticatedUser_.toBuilder();
            }
            authenticatedUser_ = input.readMessage(com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(authenticatedUser_);
              authenticatedUser_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              authenticationData_ = com.google.protobuf.MapField.newMapField(
                  AuthenticationDataDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            authenticationData__ = input.readMessage(
                AuthenticationDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            authenticationData_.getMutableMap().put(
                authenticationData__.getKey(), authenticationData__.getValue());
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.wso2.identity.outbound.oidc.auth.service.rpc.OutboundOIDCServiceOuterClass.internal_static_ProcessAuthResponse_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 3:
        return internalGetAuthenticationData();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.wso2.identity.outbound.oidc.auth.service.rpc.OutboundOIDCServiceOuterClass.internal_static_ProcessAuthResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse.class, com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse.Builder.class);
  }

  private int bitField0_;
  public static final int AUTHENTICATIONSTATUS_FIELD_NUMBER = 1;
  private int authenticationStatus_;
  /**
   * <code>.AuthenticatorFlowStatus authenticationStatus = 1;</code>
   */
  public int getAuthenticationStatusValue() {
    return authenticationStatus_;
  }
  /**
   * <code>.AuthenticatorFlowStatus authenticationStatus = 1;</code>
   */
  public com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus getAuthenticationStatus() {
    com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus result = com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus.valueOf(authenticationStatus_);
    return result == null ? com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus.UNRECOGNIZED : result;
  }

  public static final int AUTHENTICATEDUSER_FIELD_NUMBER = 2;
  private com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser authenticatedUser_;
  /**
   * <code>.AuthenticatedUser authenticatedUser = 2;</code>
   */
  public boolean hasAuthenticatedUser() {
    return authenticatedUser_ != null;
  }
  /**
   * <code>.AuthenticatedUser authenticatedUser = 2;</code>
   */
  public com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser getAuthenticatedUser() {
    return authenticatedUser_ == null ? com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.getDefaultInstance() : authenticatedUser_;
  }
  /**
   * <code>.AuthenticatedUser authenticatedUser = 2;</code>
   */
  public com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUserOrBuilder getAuthenticatedUserOrBuilder() {
    return getAuthenticatedUser();
  }

  public static final int AUTHENTICATIONDATA_FIELD_NUMBER = 3;
  private static final class AuthenticationDataDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.wso2.identity.outbound.oidc.auth.service.rpc.OutboundOIDCServiceOuterClass.internal_static_ProcessAuthResponse_AuthenticationDataEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> authenticationData_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetAuthenticationData() {
    if (authenticationData_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          AuthenticationDataDefaultEntryHolder.defaultEntry);
    }
    return authenticationData_;
  }

  public int getAuthenticationDataCount() {
    return internalGetAuthenticationData().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; authenticationData = 3;</code>
   */

  public boolean containsAuthenticationData(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetAuthenticationData().getMap().containsKey(key);
  }
  /**
   * Use {@link #getAuthenticationDataMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getAuthenticationData() {
    return getAuthenticationDataMap();
  }
  /**
   * <code>map&lt;string, string&gt; authenticationData = 3;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getAuthenticationDataMap() {
    return internalGetAuthenticationData().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; authenticationData = 3;</code>
   */

  public java.lang.String getAuthenticationDataOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetAuthenticationData().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; authenticationData = 3;</code>
   */

  public java.lang.String getAuthenticationDataOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetAuthenticationData().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (authenticationStatus_ != com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus.SUCCESS_COMPLETED.getNumber()) {
      output.writeEnum(1, authenticationStatus_);
    }
    if (authenticatedUser_ != null) {
      output.writeMessage(2, getAuthenticatedUser());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetAuthenticationData(),
        AuthenticationDataDefaultEntryHolder.defaultEntry,
        3);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (authenticationStatus_ != com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus.SUCCESS_COMPLETED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, authenticationStatus_);
    }
    if (authenticatedUser_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAuthenticatedUser());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetAuthenticationData().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      authenticationData__ = AuthenticationDataDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, authenticationData__);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse)) {
      return super.equals(obj);
    }
    com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse other = (com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse) obj;

    boolean result = true;
    result = result && authenticationStatus_ == other.authenticationStatus_;
    result = result && (hasAuthenticatedUser() == other.hasAuthenticatedUser());
    if (hasAuthenticatedUser()) {
      result = result && getAuthenticatedUser()
          .equals(other.getAuthenticatedUser());
    }
    result = result && internalGetAuthenticationData().equals(
        other.internalGetAuthenticationData());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AUTHENTICATIONSTATUS_FIELD_NUMBER;
    hash = (53 * hash) + authenticationStatus_;
    if (hasAuthenticatedUser()) {
      hash = (37 * hash) + AUTHENTICATEDUSER_FIELD_NUMBER;
      hash = (53 * hash) + getAuthenticatedUser().hashCode();
    }
    if (!internalGetAuthenticationData().getMap().isEmpty()) {
      hash = (37 * hash) + AUTHENTICATIONDATA_FIELD_NUMBER;
      hash = (53 * hash) + internalGetAuthenticationData().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ProcessAuthResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ProcessAuthResponse)
      com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wso2.identity.outbound.oidc.auth.service.rpc.OutboundOIDCServiceOuterClass.internal_static_ProcessAuthResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetAuthenticationData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableAuthenticationData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wso2.identity.outbound.oidc.auth.service.rpc.OutboundOIDCServiceOuterClass.internal_static_ProcessAuthResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse.class, com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse.Builder.class);
    }

    // Construct using com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      authenticationStatus_ = 0;

      if (authenticatedUserBuilder_ == null) {
        authenticatedUser_ = null;
      } else {
        authenticatedUser_ = null;
        authenticatedUserBuilder_ = null;
      }
      internalGetMutableAuthenticationData().clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.wso2.identity.outbound.oidc.auth.service.rpc.OutboundOIDCServiceOuterClass.internal_static_ProcessAuthResponse_descriptor;
    }

    public com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse getDefaultInstanceForType() {
      return com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse.getDefaultInstance();
    }

    public com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse build() {
      com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse buildPartial() {
      com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse result = new com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.authenticationStatus_ = authenticationStatus_;
      if (authenticatedUserBuilder_ == null) {
        result.authenticatedUser_ = authenticatedUser_;
      } else {
        result.authenticatedUser_ = authenticatedUserBuilder_.build();
      }
      result.authenticationData_ = internalGetAuthenticationData();
      result.authenticationData_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse) {
        return mergeFrom((com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse other) {
      if (other == com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse.getDefaultInstance()) return this;
      if (other.authenticationStatus_ != 0) {
        setAuthenticationStatusValue(other.getAuthenticationStatusValue());
      }
      if (other.hasAuthenticatedUser()) {
        mergeAuthenticatedUser(other.getAuthenticatedUser());
      }
      internalGetMutableAuthenticationData().mergeFrom(
          other.internalGetAuthenticationData());
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int authenticationStatus_ = 0;
    /**
     * <code>.AuthenticatorFlowStatus authenticationStatus = 1;</code>
     */
    public int getAuthenticationStatusValue() {
      return authenticationStatus_;
    }
    /**
     * <code>.AuthenticatorFlowStatus authenticationStatus = 1;</code>
     */
    public Builder setAuthenticationStatusValue(int value) {
      authenticationStatus_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.AuthenticatorFlowStatus authenticationStatus = 1;</code>
     */
    public com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus getAuthenticationStatus() {
      com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus result = com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus.valueOf(authenticationStatus_);
      return result == null ? com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus.UNRECOGNIZED : result;
    }
    /**
     * <code>.AuthenticatorFlowStatus authenticationStatus = 1;</code>
     */
    public Builder setAuthenticationStatus(com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatorFlowStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      authenticationStatus_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.AuthenticatorFlowStatus authenticationStatus = 1;</code>
     */
    public Builder clearAuthenticationStatus() {
      
      authenticationStatus_ = 0;
      onChanged();
      return this;
    }

    private com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser authenticatedUser_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser, com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.Builder, com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUserOrBuilder> authenticatedUserBuilder_;
    /**
     * <code>.AuthenticatedUser authenticatedUser = 2;</code>
     */
    public boolean hasAuthenticatedUser() {
      return authenticatedUserBuilder_ != null || authenticatedUser_ != null;
    }
    /**
     * <code>.AuthenticatedUser authenticatedUser = 2;</code>
     */
    public com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser getAuthenticatedUser() {
      if (authenticatedUserBuilder_ == null) {
        return authenticatedUser_ == null ? com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.getDefaultInstance() : authenticatedUser_;
      } else {
        return authenticatedUserBuilder_.getMessage();
      }
    }
    /**
     * <code>.AuthenticatedUser authenticatedUser = 2;</code>
     */
    public Builder setAuthenticatedUser(com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser value) {
      if (authenticatedUserBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        authenticatedUser_ = value;
        onChanged();
      } else {
        authenticatedUserBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.AuthenticatedUser authenticatedUser = 2;</code>
     */
    public Builder setAuthenticatedUser(
        com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.Builder builderForValue) {
      if (authenticatedUserBuilder_ == null) {
        authenticatedUser_ = builderForValue.build();
        onChanged();
      } else {
        authenticatedUserBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.AuthenticatedUser authenticatedUser = 2;</code>
     */
    public Builder mergeAuthenticatedUser(com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser value) {
      if (authenticatedUserBuilder_ == null) {
        if (authenticatedUser_ != null) {
          authenticatedUser_ =
            com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.newBuilder(authenticatedUser_).mergeFrom(value).buildPartial();
        } else {
          authenticatedUser_ = value;
        }
        onChanged();
      } else {
        authenticatedUserBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.AuthenticatedUser authenticatedUser = 2;</code>
     */
    public Builder clearAuthenticatedUser() {
      if (authenticatedUserBuilder_ == null) {
        authenticatedUser_ = null;
        onChanged();
      } else {
        authenticatedUser_ = null;
        authenticatedUserBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.AuthenticatedUser authenticatedUser = 2;</code>
     */
    public com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.Builder getAuthenticatedUserBuilder() {
      
      onChanged();
      return getAuthenticatedUserFieldBuilder().getBuilder();
    }
    /**
     * <code>.AuthenticatedUser authenticatedUser = 2;</code>
     */
    public com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUserOrBuilder getAuthenticatedUserOrBuilder() {
      if (authenticatedUserBuilder_ != null) {
        return authenticatedUserBuilder_.getMessageOrBuilder();
      } else {
        return authenticatedUser_ == null ?
            com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.getDefaultInstance() : authenticatedUser_;
      }
    }
    /**
     * <code>.AuthenticatedUser authenticatedUser = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser, com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.Builder, com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUserOrBuilder> 
        getAuthenticatedUserFieldBuilder() {
      if (authenticatedUserBuilder_ == null) {
        authenticatedUserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser, com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUser.Builder, com.wso2.identity.outbound.oidc.auth.service.rpc.AuthenticatedUserOrBuilder>(
                getAuthenticatedUser(),
                getParentForChildren(),
                isClean());
        authenticatedUser_ = null;
      }
      return authenticatedUserBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> authenticationData_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetAuthenticationData() {
      if (authenticationData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AuthenticationDataDefaultEntryHolder.defaultEntry);
      }
      return authenticationData_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableAuthenticationData() {
      onChanged();;
      if (authenticationData_ == null) {
        authenticationData_ = com.google.protobuf.MapField.newMapField(
            AuthenticationDataDefaultEntryHolder.defaultEntry);
      }
      if (!authenticationData_.isMutable()) {
        authenticationData_ = authenticationData_.copy();
      }
      return authenticationData_;
    }

    public int getAuthenticationDataCount() {
      return internalGetAuthenticationData().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; authenticationData = 3;</code>
     */

    public boolean containsAuthenticationData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetAuthenticationData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAuthenticationDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getAuthenticationData() {
      return getAuthenticationDataMap();
    }
    /**
     * <code>map&lt;string, string&gt; authenticationData = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getAuthenticationDataMap() {
      return internalGetAuthenticationData().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; authenticationData = 3;</code>
     */

    public java.lang.String getAuthenticationDataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAuthenticationData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; authenticationData = 3;</code>
     */

    public java.lang.String getAuthenticationDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAuthenticationData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearAuthenticationData() {
      internalGetMutableAuthenticationData().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; authenticationData = 3;</code>
     */

    public Builder removeAuthenticationData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableAuthenticationData().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableAuthenticationData() {
      return internalGetMutableAuthenticationData().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; authenticationData = 3;</code>
     */
    public Builder putAuthenticationData(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableAuthenticationData().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; authenticationData = 3;</code>
     */

    public Builder putAllAuthenticationData(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableAuthenticationData().getMutableMap()
          .putAll(values);
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:ProcessAuthResponse)
  }

  // @@protoc_insertion_point(class_scope:ProcessAuthResponse)
  private static final com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse();
  }

  public static com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProcessAuthResponse>
      PARSER = new com.google.protobuf.AbstractParser<ProcessAuthResponse>() {
    public ProcessAuthResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProcessAuthResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ProcessAuthResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProcessAuthResponse> getParserForType() {
    return PARSER;
  }

  public com.wso2.identity.outbound.oidc.auth.service.rpc.ProcessAuthResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

